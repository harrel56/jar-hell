plugins {
    id 'java'
}

group = 'dev.harrel'
version = '1.0.0'

java {
    sourceCompatibility JavaVersion.VERSION_21
    targetCompatibility JavaVersion.VERSION_21
}

configurations {
    web
    output
}

repositories {
    mavenCentral()
}

dependencies {
    web project(path: ':web', configuration: 'output')

    implementation 'io.avaje:avaje-inject:9.10-javax'
    implementation 'io.avaje:avaje-config:3.14'
    implementation 'io.avaje:avaje-http-api:2.5'
    annotationProcessor 'io.avaje:avaje-inject-generator:9.10-javax'
    annotationProcessor 'io.avaje:avaje-http-javalin-generator:2.3'

    implementation 'org.tinylog:slf4j-tinylog:2.7.0'
    implementation 'org.tinylog:tinylog-impl:2.7.0'
    implementation 'io.javalin:javalin:6.1.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'

    implementation 'org.apache.maven:maven-resolver-provider:3.9.6'
    implementation 'org.apache.maven.resolver:maven-resolver-transport-http:1.9.20'
    implementation 'org.apache.maven.resolver:maven-resolver-transport-file:1.9.20'
    implementation 'org.apache.maven.resolver:maven-resolver-connector-basic:1.9.20'

    implementation 'org.neo4j.driver:neo4j-java-driver:5.11.0'

    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.26.0'
    testImplementation 'org.awaitility:awaitility:4.2.1'

    testImplementation 'org.testcontainers:neo4j:1.19.8'
    testImplementation 'org.wiremock.integrations.testcontainers:wiremock-testcontainers-module:1.0-alpha-13'

    testImplementation 'com.microsoft.playwright:playwright:1.47.0'
}

processResources {
    inputs.files(configurations.web)
    doLast {
        copy {
            from(configurations.web)
            into("${sourceSets.main.output.resourcesDir}/web")
        }
    }
}

/* ./gradlew playwright --args="install --with-deps chromium" */
tasks.register('playwright', JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    mainClass = 'com.microsoft.playwright.CLI'
}

tasks.withType(JavaExec).configureEach {
    environment.putAll(project.getProperties())
}

tasks.register('fatJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'dev.harrel.jarhell.App'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

artifacts {
    output(fatJar)
}

test {
    useJUnitPlatform()
}